/* * @package   MLRTimeline * @version   1.4 * @since     1.0 * @author    Matthew Lillistone <matthewlillistone.co.uk> *  */ (function($){		/* Function: Parse the Date */	function parseDate(str) {	if(typeof(str) !== 'undefined') {			var mdy = str.split('-');			return new Date(mdy[2], mdy[1]-1, mdy[0]);
	}		}    /* Function: Find the amount of days in between the two dates */	function daydiff(first, second) {		return (second-first)/(1000*60*60*24);	}	function yeardiff(first, second) {		return (second-first)/(1000*60*60*24*365);		}	/* Assign the amount of days to a var */	var size = $('.times li').length - 1;	/* Find start date */ var startDate = parseDate($('li:first','.times').attr('data-date'));console.log(startDate);
	if(typeof(str) !== 'undefined' || typeof(startDate) !== 'undefined') {/* Add start year to timeline */	$('div.time-increments').append('<ul class="time-increment" id="' + startDate.getFullYear() + '" style="width:auto; height:auto;"><p class="pyear">' + startDate.getFullYear() + '</p></div>' );	/* Find end date */    var endDate = parseDate($('.times li:eq(' + size + ')').attr('data-date'));	/* Extras not used */	var getYearDiff = yeardiff(startDate, endDate);	$('.datep').html(endDate.getFullYear());			/* Set up Increment Markers */	var incMarkers;    /* Determine the marker increments */    /* If the amount of days is less than 31... */	if(getYearDiff < 10){        /* ... Show each day as a marker increment */		var incMarkers = 1;		var totalMarkers = getYearDiff;    /* If the amount of days is greater than 31... */	} else if(getYearDiff >= 10) {        /* ... Show markers as every 7 days */		var incMarkers = 1;		var totalMarkers = getYearDiff;	}    /* Function: Round the markers to the nearest decimal */	function roundNum(num,decimals){		return Math.round(num*Math.pow(10,decimals))/Math.pow(10,decimals);	}        function ordinal(num){        if (num % 10 == 1 && num != 11) return num + 'st';        if (num % 10 == 2 && num != 12) return num + 'nd';		if (num % 10 == 3 && num != 13) return num + 'rd';        return num + 'th';    }    /* Assign the rounded number of markers to a var (last argument is 0 which means no decimal places) */	var roundedIncs = roundNum(totalMarkers,0);    /* Determine the spacing percentage */	var spacingPercent = 100/roundedIncs;	var monthSpacing = 100/12;    /* Log the end result to the console */	console.log('Total Increments: ' + roundedIncs + '. Increments of: ' + incMarkers);$('.datee').html(roundedIncs);    	/* Insert each timeline marker */    var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];    var markerDate = startDate;	var monthMarker = 0;		for(var i = 1; i <= roundedIncs; i++) {		if(getYearDiff < 10){            markerDate.setDate(markerDate.getDate()+365);		} else if(getYearDiff >= 10) {			markerDate.setDate(markerDate.getDate()+365);		}		/*== Append Years to time increments div ==*/		$('div.time-increments ').append('<ul class="time-increment" id="' + markerDate.getFullYear() + '" style="width:auto; height:auto;"><p class="pyear">' + markerDate.getFullYear() + '</p></ul>' );		}				/*== Append Months to each Year <ul> ==*/		for(var j = 0; j <= months.length - 1; j++) {		$('ul.time-increment').append('<ul class="month-time-increment" id="' + months[j]+ '" style="width:auto; /* + monthSpacing + % */  height:auto;"><span></span><p class="pmonth">' + months[j] + '</p></ul>' );		}		/*== Add a post marker to each relevent year and month as an <li> element ==*/    var i=0;	var postMarker = startDate;    $('li', '.times').each(function(){        $('#' + $(this).attr('data-year') + ' #' + $(this).attr('data-month') + '').append('<a data-date="'+$(this).attr('data-date')+'" data-hour="' +$(this).attr('data-hour')+'" title="' + $(this).attr('data-title') + '" class="marker" href="#"><li class="post-marker" id="' + $(this).attr('data-date') +'">'+ordinal($(this).attr('data-day'))+'<p class="phour">@ ' +$(this).attr('data-hour')+'</p></li></a>');                i++;    			   });        /*== Add click event to timeline markers ==*/    $('.marker').click(function(e){       e.preventDefault();       var obj = $('.date-node[data-date="'+$(this).attr('data-date')+ '"][data-hour="'+$(this).attr('data-hour')+'"]');        $('.date-node').not(obj).hide();        obj.show();    });		/*== Remove Months which have no children? ==*/	$('ul.month-time-increment').each(function() {	if($(this).children().length < 3){		$(this).css({'display':'none'});		}		});			/*== Remove empty years <p> ==*/	$('ul.time-increment').each(function(i) {	var minWidth = 70;	if($(this).width() < minWidth) {	if (i % 5 == 0) {		/* $(this).css({background:'transparent',padding:'3px'}).find('p').replaceWith('<i class="fa fa-long-arrow-right"></i>'); */		$(this).css({visibility:'visible'});		}	else {		$(this).css({visibility:'hidden'});		}		}		});			/*== Simple scrolling marginLeft with previous and next buttons ==*/					/*== Function to show arrows or not depending on the VALUES of the margin css ==*/	function scrollArrowShow() {	var x = $('.time-increments').css('left');	var maxScroll = $('#timeline').width() - $('.time-increments').width();        if (parseInt(x) >= 0) {            $('#button-left, #button-left-end').css({visibility: 'hidden'});        }else{            $('#button-left, #button-left-end').css({visibility: 'visible'});        }        if (parseInt(x) < maxScroll) {            $('#button-right, #button-right-end').css({visibility: 'hidden'});	        }else{            $('#button-right, #button-right-end').css({visibility: 'visible'});        }    }		var completeWidth = $('.time-increments').width() - ($('#timeline').width() - 100);		/*================= Initialise margin at the start depending on options =================*/				if($('.timelinediv').attr('data-position') == 'oldest' || !!$('.timelinediv').attr('data-position')) {		$('.time-increments').css({'left':'0px'});				/*== Hide left button at start ==*/		$('#bleft').css({visibility: 'hidden'});		}				/*== Hide right button at start if the time-increments div is smaller than the timeline div ==*/ 		if ($('.time-increments').width() <= $('#timeline').parent().width()) {			$('#bright').css({visibility: 'hidden'});			} else {			$('#bright').css({visibility: 'visible'});			}								if($('.timelinediv').attr('data-position') == 'most_recent') {		$('.time-increments').css({'left':'-'+ completeWidth + 'px'});		$('#bleft').css({visibility: 'visible'});		var lastInList = $('.times li.date-node:last');		console.log(lastInList);		$('.times li').hide();		lastInList.show();				/*== Hide right button at start ==*/				$('#bright').css({visibility: 'hidden'});				}				/*============================ Button Events ============================*/	/*== End Right Button event ==*/	$('#button-right-end').click(function(event) {      event.preventDefault();            $('.time-increments').stop().animate({                 left: "-" + completeWidth + "px"             }, 1500, function(){                 /* createCookie('scrollPos', $('#slide-wrap').scrollLeft()); */                 scrollArrowShow();             });                 });		 /*== Add attribute target blank to all a elements in timelinediv ==*/		 $('.timelinediv a[href^="http://"]').attr('target','_blank');		 /*== End Right Button event ==*/	 $('#button-left-end').click(function(event) {       event.preventDefault();             $('.time-increments').stop().animate({                 left: 0 + "px"             }, 1500, function(){                /* createCookie('scrollPos', $('#slide-wrap').scrollLeft()); */                 scrollArrowShow();             });                 });		 /*== Right Button event ==*/	 $('#button-right').click(function(event) {       event.preventDefault();			 if(!$('#timeline .time-increments').is(':animated')) {            $('#timeline .time-increments').stop().animate({                left: "-=300px"            }, 1000, function(){                 /* createCookie('scrollPos', $('#slide-wrap').scrollLeft()); */                 scrollArrowShow();            });		}                });		 /*== Left Button Event ==*/	 $('#button-left').click(function(event) {      event.preventDefault();			 if(!$('#timeline .time-increments').is(':animated')) {             $('#timeline .time-increments').stop().animate({                left: "+=300px"            }, 1000, function(){                 /* createCookie('scrollPos', $('#slide-wrap').scrollLeft()); */                 scrollArrowShow();             });		 }  });} // End of typeof })(jQuery);